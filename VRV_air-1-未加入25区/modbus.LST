C51 COMPILER V9.01   MODBUS                                                                05/16/2012 15:33:02 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MODBUS
OBJECT MODULE PLACED IN modbus.OBJ
COMPILER INVOKED BY: C:\Keil-c51\C51\BIN\C51.EXE modbus.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "main.h"
*** ERROR C202 IN LINE 58 OF MAIN.H: 'P0': undefined identifier
*** ERROR C202 IN LINE 59 OF MAIN.H: 'P0': undefined identifier
*** ERROR C202 IN LINE 61 OF MAIN.H: 'P2': undefined identifier
*** ERROR C202 IN LINE 62 OF MAIN.H: 'P2': undefined identifier
*** ERROR C202 IN LINE 63 OF MAIN.H: 'P2': undefined identifier
   2          #include "c8051f340.h"
   3          #include "modbus.h"
   4          
   5          //字地址 0 - 255 (只取低8位)
   6          //位地址 0 - 255 (只取低8位)
   7          
   8          /* CRC 高位字节值表 */ 
   9          const uint8 code auchCRCHi[] = { 
  10          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 
  11          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 
  12          0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 
  13          0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 
  14          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 
  15          0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 
  16          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 
  17          0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 
  18          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 
  19          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 
  20          0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 
  21          0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 
  22          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 
  23          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 
  24          0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 
  25          0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 
  26          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 
  27          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 
  28          0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 
  29          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 
  30          0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 
  31          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 
  32          0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 
  33          0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 
  34          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 
  35          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40 
  36          } ; 
  37          /* CRC低位字节值表*/ 
  38          const uint8 code auchCRCLo[] = { 
  39          0x00, 0xC0, 0xC1, 0x01, 0xC3, 0x03, 0x02, 0xC2, 0xC6, 0x06, 
  40          0x07, 0xC7, 0x05, 0xC5, 0xC4, 0x04, 0xCC, 0x0C, 0x0D, 0xCD, 
  41          0x0F, 0xCF, 0xCE, 0x0E, 0x0A, 0xCA, 0xCB, 0x0B, 0xC9, 0x09, 
  42          0x08, 0xC8, 0xD8, 0x18, 0x19, 0xD9, 0x1B, 0xDB, 0xDA, 0x1A, 
  43          0x1E, 0xDE, 0xDF, 0x1F, 0xDD, 0x1D, 0x1C, 0xDC, 0x14, 0xD4, 
  44          0xD5, 0x15, 0xD7, 0x17, 0x16, 0xD6, 0xD2, 0x12, 0x13, 0xD3, 
  45          0x11, 0xD1, 0xD0, 0x10, 0xF0, 0x30, 0x31, 0xF1, 0x33, 0xF3, 
  46          0xF2, 0x32, 0x36, 0xF6, 0xF7, 0x37, 0xF5, 0x35, 0x34, 0xF4, 
  47          0x3C, 0xFC, 0xFD, 0x3D, 0xFF, 0x3F, 0x3E, 0xFE, 0xFA, 0x3A, 
  48          0x3B, 0xFB, 0x39, 0xF9, 0xF8, 0x38, 0x28, 0xE8, 0xE9, 0x29, 
  49          0xEB, 0x2B, 0x2A, 0xEA, 0xEE, 0x2E, 0x2F, 0xEF, 0x2D, 0xED, 
  50          0xEC, 0x2C, 0xE4, 0x24, 0x25, 0xE5, 0x27, 0xE7, 0xE6, 0x26, 
C51 COMPILER V9.01   MODBUS                                                                05/16/2012 15:33:02 PAGE 2   

  51          0x22, 0xE2, 0xE3, 0x23, 0xE1, 0x21, 0x20, 0xE0, 0xA0, 0x60, 
  52          0x61, 0xA1, 0x63, 0xA3, 0xA2, 0x62, 0x66, 0xA6, 0xA7, 0x67, 
  53          0xA5, 0x65, 0x64, 0xA4, 0x6C, 0xAC, 0xAD, 0x6D, 0xAF, 0x6F, 
  54          0x6E, 0xAE, 0xAA, 0x6A, 0x6B, 0xAB, 0x69, 0xA9, 0xA8, 0x68, 
  55          0x78, 0xB8, 0xB9, 0x79, 0xBB, 0x7B, 0x7A, 0xBA, 0xBE, 0x7E, 
  56          0x7F, 0xBF, 0x7D, 0xBD, 0xBC, 0x7C, 0xB4, 0x74, 0x75, 0xB5, 
  57          0x77, 0xB7, 0xB6, 0x76, 0x72, 0xB2, 0xB3, 0x73, 0xB1, 0x71, 
  58          0x70, 0xB0, 0x50, 0x90, 0x91, 0x51, 0x93, 0x53, 0x52, 0x92, 
  59          0x96, 0x56, 0x57, 0x97, 0x55, 0x95, 0x94, 0x54, 0x9C, 0x5C, 
  60          0x5D, 0x9D, 0x5F, 0x9F, 0x9E, 0x5E, 0x5A, 0x9A, 0x9B, 0x5B, 
  61          0x99, 0x59, 0x58, 0x98, 0x88, 0x48, 0x49, 0x89, 0x4B, 0x8B, 
  62          0x8A, 0x4A, 0x4E, 0x8E, 0x8F, 0x4F, 0x8D, 0x4D, 0x4C, 0x8C, 
  63          0x44, 0x84, 0x85, 0x45, 0x87, 0x47, 0x46, 0x86, 0x82, 0x42, 
  64          0x43, 0x83, 0x41, 0x81, 0x80, 0x40 
  65          } ;
  66          
  67          uint8   testCoil;               //用于测试 位地址1
  68          uint16  testRegister;   //用于测试 字址址16
  69          
  70          uint8   localAddr = 1;  //单片机控制板的地址
  71          uint8   sendCount;              //发送字节个数
  72          uint8   receCount;          //接收到的字节个数
  73          uint8   sendPosi;           //发送位置
  74          
  75          uint16 crc16(uint8 *puchMsg, uint16 usDataLen) 
  76          { 
  77   1              uint8 uchCRCHi = 0xFF ; /* 高CRC字节初始化 */ 
  78   1              uint8 uchCRCLo = 0xFF ; /* 低CRC 字节初始化 */ 
  79   1              uint32 uIndex ; /* CRC循环中的索引 */ 
  80   1              while (usDataLen--) /* 传输消息缓冲区 */ 
  81   1              { 
  82   2                      uIndex = uchCRCHi ^ *puchMsg++ ; /* 计算CRC */ 
  83   2                      uchCRCHi = uchCRCLo ^ auchCRCHi[uIndex] ; 
  84   2                      uchCRCLo = auchCRCLo[uIndex] ; 
  85   2              } 
  86   1              return (uchCRCHi << 8 | uchCRCLo) ; 
  87   1      }//uint16 crc16(uint8 *puchMsg, uint16 usDataLen)
  88          
  89          //开始发送
  90          void beginSend(void)
  91          {       
  92   1              b485Send = 1;   //设为发送
*** ERROR C202 IN LINE 92 OF MODBUS.C: 'b485Send': undefined identifier
  93   1              
  94   1              sendPosi = 0;
  95   1              if(sendCount > 1)
  96   1                      sendCount--;
  97   1              ACC = sendBuf[0];
*** ERROR C202 IN LINE 97 OF MODBUS.C: 'sendBuf': undefined identifier
  98   1              TB8 = P;
*** ERROR C202 IN LINE 98 OF MODBUS.C: 'TB8': undefined identifier
  99   1              SBUF = sendBuf[0];
*** ERROR C202 IN LINE 99 OF MODBUS.C: 'SBUF': undefined identifier
 100   1      
 101   1      }//void beginSend(void)
 102          
 103          
 104          //读线圈状态
 105          void readCoil(void)
 106          {
 107   1              uint8 addr;
 108   1              uint8 tempAddr;
C51 COMPILER V9.01   MODBUS                                                                05/16/2012 15:33:02 PAGE 3   

 109   1              uint8 byteCount;
 110   1              uint8 bitCount;
 111   1              uint16 crcData;
 112   1              uint8 position;
 113   1              uint8 i,k;
 114   1              uint8  result;
 115   1              uint16 tempData;
 116   1              uint8  exit = 0;
 117   1              
 118   1              //addr = (receBuf[2]<<8) + receBuf[3];  
 119   1              //tempAddr = addr & 0xfff;
 120   1              addr = receBuf[3];
*** ERROR C202 IN LINE 120 OF MODBUS.C: 'receBuf': undefined identifier
 121   1              tempAddr = addr;
 122   1      
 123   1              //bitCount = (receBuf[4]<<8) + receBuf[5];      //读取的位个数
 124   1              bitCount = receBuf[5];
*** ERROR C202 IN LINE 124 OF MODBUS.C: 'receBuf': undefined identifier
 125   1      
 126   1              byteCount = bitCount / 8;                                       //字节个数
 127   1              if(bitCount%8 != 0)
 128   1                      byteCount++;
 129   1                                                                              
 130   1              for(k=0;k<byteCount;k++)
 131   1              {//字节位置
 132   2                      position = k + 3;
 133   2                      sendBuf[position] = 0;
*** ERROR C202 IN LINE 133 OF MODBUS.C: 'sendBuf': undefined identifier
 134   2                      for(i=0;i<8;i++)
 135   2                      {
 136   3                              getCoilVal(tempAddr,&tempData);
 137   3                              
 138   3                              sendBuf[position] |= tempData << i;
*** ERROR C202 IN LINE 138 OF MODBUS.C: 'sendBuf': undefined identifier
 139   3                              tempAddr++;
 140   3                              if(tempAddr >= addr+bitCount)
 141   3                              {       //读完
 142   4                                      exit = 1;
 143   4                                      break;
 144   4                              }       
 145   3                      }
 146   2                      if(exit == 1)
 147   2                              break;
 148   2              }
 149   1              
 150   1              sendBuf[0] = localAddr;
*** ERROR C202 IN LINE 150 OF MODBUS.C: 'sendBuf': undefined identifier
 151   1              sendBuf[1] = 0x01;      
*** ERROR C202 IN LINE 151 OF MODBUS.C: 'sendBuf': undefined identifier
 152   1              sendBuf[2] = byteCount;
*** ERROR C202 IN LINE 152 OF MODBUS.C: 'sendBuf': undefined identifier
 153   1              byteCount += 3;
 154   1              crcData = crc16(sendBuf,byteCount);     
*** ERROR C202 IN LINE 154 OF MODBUS.C: 'sendBuf': undefined identifier
 155   1              sendBuf[byteCount] = crcData >> 8;
*** ERROR C202 IN LINE 155 OF MODBUS.C: 'sendBuf': undefined identifier
 156   1              byteCount++;
 157   1              sendBuf[byteCount] = crcData & 0xff;
*** ERROR C202 IN LINE 157 OF MODBUS.C: 'sendBuf': undefined identifier
 158   1              sendCount = byteCount + 1;
 159   1              
 160   1              beginSend();    
C51 COMPILER V9.01   MODBUS                                                                05/16/2012 15:33:02 PAGE 4   

 161   1      }//void readCoil(void) 
 162          
 163          //读寄存器
 164          void readRegisters(void)
 165          {
 166   1              uint8 addr;
 167   1              uint8 tempAddr;
 168   1              uint16 result;
 169   1              uint16 crcData;
 170   1              uint8 readCount;
 171   1              uint8 byteCount;
 172   1              uint8  finsh;   //1完成  0出错
 173   1              uint16 i;
 174   1              uint16 tempData = 0;    
 175   1              
 176   1              //addr = (receBuf[2]<<8) + receBuf[3];
 177   1              //tempAddr = addr & 0xfff;      
 178   1              addr = receBuf[3];
*** ERROR C202 IN LINE 178 OF MODBUS.C: 'receBuf': undefined identifier
 179   1              tempAddr = addr;
 180   1      
 181   1              //readCount = (receBuf[4]<<8) + receBuf[5];     //要读的个数
 182   1              readCount = receBuf[5];
*** ERROR C202 IN LINE 182 OF MODBUS.C: 'receBuf': undefined identifier
 183   1      
 184   1              byteCount = readCount * 2;
 185   1              
 186   1              for(i=0;i<byteCount;i+=2,tempAddr++)
 187   1              {
 188   2                      getRegisterVal(tempAddr,&tempData);                             
 189   2                      sendBuf[i+3] = tempData >> 8;                                           
*** ERROR C202 IN LINE 189 OF MODBUS.C: 'sendBuf': undefined identifier
 190   2                      sendBuf[i+4] = tempData & 0xff;                 
*** ERROR C202 IN LINE 190 OF MODBUS.C: 'sendBuf': undefined identifier
 191   2              }
 192   1              
 193   1              sendBuf[0] = localAddr;
*** ERROR C202 IN LINE 193 OF MODBUS.C: 'sendBuf': undefined identifier
 194   1              sendBuf[1] = 3;
*** ERROR C202 IN LINE 194 OF MODBUS.C: 'sendBuf': undefined identifier
 195   1              sendBuf[2] = byteCount;
*** ERROR C202 IN LINE 195 OF MODBUS.C: 'sendBuf': undefined identifier
 196   1              byteCount += 3;
 197   1              crcData = crc16(sendBuf,byteCount);
*** ERROR C202 IN LINE 197 OF MODBUS.C: 'sendBuf': undefined identifier
 198   1              sendBuf[byteCount] = crcData >> 8;
*** ERROR C202 IN LINE 198 OF MODBUS.C: 'sendBuf': undefined identifier
 199   1              byteCount++;
 200   1              sendBuf[byteCount] = crcData & 0xff;
*** ERROR C202 IN LINE 200 OF MODBUS.C: 'sendBuf': undefined identifier
 201   1              
 202   1              sendCount = byteCount + 1;
 203   1              beginSend();
 204   1      }//void readRegisters(void)
 205          
 206          
 207          //强制单个线圈
 208          void forceSingleCoil(void)
 209          {
 210   1              uint8 addr;
 211   1              uint8 tempAddr;
 212   1              uint16 tempData;
C51 COMPILER V9.01   MODBUS                                                                05/16/2012 15:33:02 PAGE 5   

 213   1              uint8  onOff;
 214   1              uint8 i;
 215   1              
 216   1              //addr = (receBuf[2]<<8) + receBuf[3];  
 217   1              //tempAddr = addr & 0xfff;
 218   1              addr = receBuf[3];
*** ERROR C202 IN LINE 218 OF MODBUS.C: 'receBuf': undefined identifier
 219   1              tempAddr = addr;
 220   1      
 221   1              //onOff = (receBuf[4]<<8) + receBuf[5]; 
 222   1              onOff = receBuf[4];
*** ERROR C202 IN LINE 222 OF MODBUS.C: 'receBuf': undefined identifier
 223   1              
 224   1              //if(onOff == 0xff00)
 225   1              if(onOff == 0xff)
 226   1              {       //设为ON
 227   2                      tempData = 1;
 228   2              } 
 229   1              //else if(onOff == 0x0000)
 230   1              else if(onOff == 0x00)
 231   1              {       //设为OFF
 232   2                      tempData = 0;
 233   2              }
 234   1      
 235   1              setCoilVal(tempAddr,tempData);  
 236   1              
 237   1              for(i=0;i<receCount;i++)
 238   1              {
 239   2                      sendBuf[i] = receBuf[i];
*** ERROR C202 IN LINE 239 OF MODBUS.C: 'sendBuf': undefined identifier
 240   2              }
 241   1              sendCount = receCount;
 242   1              beginSend();    
 243   1      }//void forceSingleCoil(void)
 244          
 245          
 246          //设置多个寄存器
 247          void presetMultipleRegisters(void)
 248          {
 249   1              uint8 addr;
 250   1              uint8 tempAddr;
 251   1              uint8 byteCount;
 252   1              uint8 setCount;
 253   1              uint16 crcData;
 254   1              uint16 tempData;
 255   1              uint8  finsh;   //为1时完成 为0时出错
 256   1              uint8 i;
 257   1              
 258   1              //addr = (receBuf[2]<<8) + receBuf[3];
 259   1              //tempAddr = addr & 0xfff;
 260   1              addr = receBuf[3];
*** ERROR C202 IN LINE 260 OF MODBUS.C: 'receBuf': undefined identifier
 261   1              tempAddr = addr & 0xff;
 262   1      
 263   1              //setCount = (receBuf[4]<<8) + receBuf[5];
 264   1              setCount = receBuf[5];
*** ERROR C202 IN LINE 264 OF MODBUS.C: 'receBuf': undefined identifier
 265   1              byteCount = receBuf[6]; 
*** ERROR C202 IN LINE 265 OF MODBUS.C: 'receBuf': undefined identifier
 266   1              
 267   1              for(i=0;i<setCount;i++,tempAddr++)
 268   1              {
C51 COMPILER V9.01   MODBUS                                                                05/16/2012 15:33:02 PAGE 6   

 269   2                      tempData = (receBuf[i*2+7]<<8) + receBuf[i*2+8];
*** ERROR C202 IN LINE 269 OF MODBUS.C: 'receBuf': undefined identifier
 270   2              
 271   2                      setRegisterVal(tempAddr,tempData);                      
 272   2              }
 273   1              
 274   1              sendBuf[0] = localAddr;
*** ERROR C202 IN LINE 274 OF MODBUS.C: 'sendBuf': undefined identifier
 275   1              sendBuf[1] = 16;
*** ERROR C202 IN LINE 275 OF MODBUS.C: 'sendBuf': undefined identifier
 276   1              sendBuf[2] = addr >> 8;
*** ERROR C202 IN LINE 276 OF MODBUS.C: 'sendBuf': undefined identifier
 277   1              sendBuf[3] = addr & 0xff;
*** ERROR C202 IN LINE 277 OF MODBUS.C: 'sendBuf': undefined identifier
 278   1              sendBuf[4] = setCount >> 8;
*** ERROR C202 IN LINE 278 OF MODBUS.C: 'sendBuf': undefined identifier
 279   1              sendBuf[5] = setCount & 0xff;
*** ERROR C202 IN LINE 279 OF MODBUS.C: 'sendBuf': undefined identifier
 280   1              crcData = crc16(sendBuf,6);
*** ERROR C202 IN LINE 280 OF MODBUS.C: 'sendBuf': undefined identifier
 281   1              sendBuf[6] = crcData >> 8;
*** ERROR C202 IN LINE 281 OF MODBUS.C: 'sendBuf': undefined identifier
 282   1              sendBuf[7] = crcData & 0xff;
*** ERROR C202 IN LINE 282 OF MODBUS.C: 'sendBuf': undefined identifier
 283   1              sendCount = 8;
 284   1              beginSend();    
 285   1      }//void presetMultipleRegisters(void)
 286          
 287          
 288          
 289          //检查uart0数据
 290          void checkComm0Modbus(void)
 291          {
 292   1              uint16 crcData;
 293   1              uint16 tempData;
 294   1              
 295   1              if(receCount > 4)
 296   1              {
 297   2                      switch(receBuf[1])
*** ERROR C202 IN LINE 297 OF MODBUS.C: 'receBuf': undefined identifier
 298   2                      {
 299   3                              case 1://读取线圈状态(读取点 16位以内)
 300   3                              case 3://读取保持寄存器(一个或多个)
 301   3                              case 5://强制单个线圈
 302   3                              case 6://设置单个寄存器
 303   3                                              if(receCount >= 8)
 304   3                                              {//接收完成一组数据
 305   4                                                      //应该关闭接收中断
 306   4                                                      
 307   4                                                      if(receBuf[0]==localAddr && checkoutError==0)
*** ERROR C202 IN LINE 307 OF MODBUS.C: 'receBuf': undefined identifier
 308   4                                                      {
 309   5                                                              crcData = crc16(receBuf,6);
*** ERROR C202 IN LINE 309 OF MODBUS.C: 'receBuf': undefined identifier
 310   5                                                              if(crcData == receBuf[7]+(receBuf[6]<<8))
*** ERROR C202 IN LINE 310 OF MODBUS.C: 'receBuf': undefined identifier
 311   5                                                              {//校验正确
 312   6                                                                      if(receBuf[1] == 1)
*** ERROR C202 IN LINE 312 OF MODBUS.C: 'receBuf': undefined identifier
 313   6                                                                      {//读取线圈状态(读取点 16位以内)
 314   7                                                                              readCoil();                                                             
 315   7                                                                      }
C51 COMPILER V9.01   MODBUS                                                                05/16/2012 15:33:02 PAGE 7   

 316   6                                                                      else if(receBuf[1] == 3)
*** ERROR C202 IN LINE 316 OF MODBUS.C: 'receBuf': undefined identifier
 317   6                                                                      {//读取保持寄存器(一个或多个)
 318   7                                                                              readRegisters();
 319   7                                                                      }
 320   6                                                                      else if(receBuf[1] == 5)
*** ERROR C202 IN LINE 320 OF MODBUS.C: 'receBuf': undefined identifier
 321   6                                                                      {//强制单个线圈
 322   7                                                                              forceSingleCoil();                                                              
 323   7                                                                      }
 324   6                                                                      else if(receBuf[1] == 6)
*** ERROR C202 IN LINE 324 OF MODBUS.C: 'receBuf': undefined identifier
 325   6                                                                      {
 326   7                                                                              //presetSingleRegister();                                                               
 327   7                                                                      }
 328   6      
 329   6                                                              }
 330   5                                                      }                                               
 331   4                                                      receCount = 0;  
 332   4                                                      checkoutError = 0;
*** ERROR C202 IN LINE 332 OF MODBUS.C: 'checkoutError': undefined identifier
 333   4                                              }
 334   3                                              break;
 335   3                              
 336   3                              case 15://设置多个线圈
 337   3                                              tempData = receBuf[6]; 
*** ERROR C202 IN LINE 337 OF MODBUS.C: 'receBuf': undefined identifier
 338   3                                              tempData += 9;  //数据个数
 339   3                                              if(receCount >= tempData)
 340   3                                              {
 341   4                                                      if(receBuf[0]==localAddr && checkoutError==0)
*** ERROR C202 IN LINE 341 OF MODBUS.C: 'receBuf': undefined identifier
 342   4                                                      {
 343   5                                                              crcData = crc16(receBuf,tempData-2);
*** ERROR C202 IN LINE 343 OF MODBUS.C: 'receBuf': undefined identifier
 344   5                                                              if(crcData == (receBuf[tempData-2]<<8)+ receBuf[tempData-1])
*** ERROR C202 IN LINE 344 OF MODBUS.C: 'receBuf': undefined identifier
 345   5                                                              {
 346   6                                                                      //forceMultipleCoils();                 
 347   6                                                              }
 348   5                                                      }       
 349   4                                                      receCount = 0;
 350   4                                                      checkoutError = 0;
*** ERROR C202 IN LINE 350 OF MODBUS.C: 'checkoutError': undefined identifier
 351   4                                              }
 352   3                                              break;
 353   3                              
 354   3                              case 16://设置多个寄存器
 355   3                                              tempData = (receBuf[4]<<8) + receBuf[5];
*** ERROR C202 IN LINE 355 OF MODBUS.C: 'receBuf': undefined identifier
 356   3                                              tempData = tempData * 2;        //数据个数
 357   3                                              tempData += 9;
 358   3                                              if(receCount >= tempData)
 359   3                                              {
 360   4                                                      if(receBuf[0]==localAddr && checkoutError==0)
*** ERROR C202 IN LINE 360 OF MODBUS.C: 'receBuf': undefined identifier
 361   4                                                      {
 362   5                                                              crcData = crc16(receBuf,tempData-2);
*** ERROR C202 IN LINE 362 OF MODBUS.C: 'receBuf': undefined identifier
 363   5                                                              if(crcData == (receBuf[tempData-2]<<8)+ receBuf[tempData-1])
*** ERROR C202 IN LINE 363 OF MODBUS.C: 'receBuf': undefined identifier
 364   5                                                              {
C51 COMPILER V9.01   MODBUS                                                                05/16/2012 15:33:02 PAGE 8   

 365   6                                                                      presetMultipleRegisters();                      
 366   6                                                              }
 367   5                                                      }       
 368   4                                                      receCount = 0;
 369   4                                                      checkoutError = 0;
*** ERROR C202 IN LINE 369 OF MODBUS.C: 'checkoutError': undefined identifier
 370   4                                              }
 371   3                                              break;
 372   3                                                                      
 373   3                              default:
 374   3                                              break;                  
 375   3                      }
 376   2              }
 377   1      }//void checkComm0(void)
 378          
 379          //取线圈状态 返回0表示成功
 380          uint16 getCoilVal(uint16 addr,uint16 *tempData)
 381          {
 382   1              uint16 result = 0;
 383   1              uint16 tempAddr;
 384   1              
 385   1              tempAddr = addr & 0xfff;
 386   1              //只取低8位地址
 387   1              switch(tempAddr & 0xff)
 388   1              {
 389   2                      case 0:
 390   2                                      break;
 391   2                      case 1: 
 392   2                                      *tempData = testCoil;
 393   2                                      break;
 394   2                      case 2:         
 395   2                                      break;          
 396   2                      case 3:
 397   2                                      break;          
 398   2                      case 4:
 399   2                                      break;          
 400   2                      case 5:
 401   2                                      break;
 402   2                      case 6:
 403   2                                      break;                  
 404   2                      case 7:
 405   2                                      break;          
 406   2                      case 8:
 407   2                                      break;          
 408   2                      case 9:
 409   2                                      break;          
 410   2                      case 10:
 411   2                                      break;
 412   2                      case 11:
 413   2                                      break;
 414   2                      case 12:
 415   2                                      break;
 416   2                      case 13:
 417   2                                      break;
 418   2                      case 14:
 419   2                                      break;
 420   2                      case 15:
 421   2                                      break;
 422   2                      case 16:
 423   2                                      break;                                                                                                          
 424   2                      default:
 425   2                                      break;          
C51 COMPILER V9.01   MODBUS                                                                05/16/2012 15:33:02 PAGE 9   

 426   2              }       
 427   1              
 428   1              return result;
 429   1      }//uint16 getCoilVal(uint16 addr,uint16 *data)
 430          
 431          
 432          //设定线圈状态 返回0表示成功
 433          uint16 setCoilVal(uint16 addr,uint16 tempData)
 434          {
 435   1              uint16 result = 0;
 436   1              uint16 tempAddr;
 437   1              
 438   1              tempAddr = addr & 0xfff;
 439   1              
 440   1                      
 441   1              switch(tempAddr & 0xff)
 442   1              {
 443   2                      case 0:
 444   2                                      break;
 445   2                      case 1: 
 446   2                                      testCoil = tempData;
 447   2                                      break;
 448   2                      case 2:         
 449   2                                      break;          
 450   2                      case 3:
 451   2                                      break;          
 452   2                      case 4:
 453   2                                      break;          
 454   2                      case 5:
 455   2                                      break;
 456   2                      case 6:
 457   2                                      break;                  
 458   2                      case 7:
 459   2                                      break;          
 460   2                      case 8:
 461   2                                      break;          
 462   2                      case 9:
 463   2                                      break;          
 464   2                      case 10:
 465   2                                      break;
 466   2                      case 11:
 467   2                                      break;
 468   2                      case 12:
 469   2                                      break;
 470   2                      case 13:
 471   2                                      break;
 472   2                      case 14:
 473   2                                      break;
 474   2                      case 15:
 475   2                                      break;
 476   2                      case 16:
 477   2                                      break;                                                                                                          
 478   2                      default:
 479   2                                      break;          
 480   2              }       
 481   1      
 482   1      
 483   1              return result;
 484   1      }//uint16 setCoilVal(uint16 addr,uint16 data)
 485          
 486          //取寄存器值 返回0表示成功
 487          uint16 getRegisterVal(uint16 addr,uint16 *tempData)
C51 COMPILER V9.01   MODBUS                                                                05/16/2012 15:33:02 PAGE 10  

 488          {
 489   1              uint16 result = 0;
 490   1              uint16 tempAddr;
 491   1              
 492   1              tempAddr = addr & 0xfff;
 493   1              
 494   1              switch(tempAddr & 0xff)
 495   1              {
 496   2                      case 0:
 497   2                                      break;
 498   2                      case 1: 
 499   2                                      break;
 500   2                      case 2:         
 501   2                                      break;          
 502   2                      case 3:
 503   2                                      break;          
 504   2                      case 4:
 505   2                                      break;          
 506   2                      case 5:
 507   2                                      break;
 508   2                      case 6:
 509   2                                      break;                  
 510   2                      case 7:
 511   2                                      break;          
 512   2                      case 8:
 513   2                                      break;          
 514   2                      case 9:
 515   2                                      break;          
 516   2                      case 10:
 517   2                                      break;
 518   2                      case 11:
 519   2                                      break;
 520   2                      case 12:
 521   2                                      break;
 522   2                      case 13:
 523   2                                      break;
 524   2                      case 14:
 525   2                                      break;
 526   2                      case 15:
 527   2                                      break;
 528   2                      case 16:
 529   2                                      *tempData = testRegister;
 530   2                                      break;                                                                                                          
 531   2                      default:
 532   2                                      break;          
 533   2              }
 534   1              
 535   1              return result;
 536   1      }//uint16 getRegisterVal(uint16 addr,uint16 &data)
 537          
 538          //设置寄存器值 返回0表示成功
 539          uint16 setRegisterVal(uint16 addr,uint16 tempData)
 540          {
 541   1              uint16 result = 0;
 542   1              uint16 tempAddr;
 543   1              
 544   1              tempAddr = addr & 0xfff;
 545   1              
 546   1              switch(tempAddr & 0xff)
 547   1              {
 548   2                      case 0:
 549   2                                      break;
C51 COMPILER V9.01   MODBUS                                                                05/16/2012 15:33:02 PAGE 11  

 550   2                      case 1: 
 551   2                                      break;
 552   2                      case 2:         
 553   2                                      break;          
 554   2                      case 3:
 555   2                                      break;          
 556   2                      case 4:
 557   2                                      break;          
 558   2                      case 5:
 559   2                                      break;
 560   2                      case 6:
 561   2                                      break;                  
 562   2                      case 7:
 563   2                                      break;          
 564   2                      case 8:
 565   2                                      break;          
 566   2                      case 9:
 567   2                                      break;          
 568   2                      case 10:
 569   2                                      break;
 570   2                      case 11:
 571   2                                      break;
 572   2                      case 12:
 573   2                                      break;
 574   2                      case 13:
 575   2                                      break;
 576   2                      case 14:
 577   2                                      break;
 578   2                      case 15:
 579   2                                      break;
 580   2                      case 16:
 581   2                                      testRegister = tempData;
 582   2                                      break;                                                                                                          
 583   2                      default:
 584   2                                      break;          
 585   2              }
 586   1              
 587   1              return result;
 588   1      }//uint8 setRegisterVal(uint16 addr,uint16 data)

C51 COMPILATION COMPLETE.  0 WARNING(S),  64 ERROR(S)
